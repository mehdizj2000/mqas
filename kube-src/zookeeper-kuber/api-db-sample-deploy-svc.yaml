---
apiVersion: v1
kind: Service
metadata:
  name: api-db-sample-svc
spec:
  ports:
  - port: 8880
    targetPort: 8080
    protocol: TCP
  selector:
    app: api-db-sample
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-db-sample-deploy
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api-db-sample
  template:
    metadata:
      labels:
        app: api-db-sample
    spec:
      serviceAccountName: gnafdbsa
      containers:
      - name: cloud-sql-proxy
        # It is recommended to use the latest version of the Cloud SQL proxy
        # Make sure to update on a regular schedule!
        image: gcr.io/cloudsql-docker/gce-proxy
        command:
        - "/cloud_sql_proxy"
        
          # If connecting from a VPC-native GKE cluster, you can use the
          # following flag to have the proxy connect over private IP
          # - "-ip_address_types=PRIVATE"
    
          # Replace DB_PORT with the port the proxy should listen on
          # Defaults: MySQL: 3306, Postgres: 5432, SQLServer: 1433
        - "-instances=potent-terminal-298905:us-central1:gnaf-pg-db-02=tcp:5432"
        securityContext:
          # The default Cloud SQL proxy image runs as the
          # "nonroot" user and group (uid: 65532) by default.
          runAsNonRoot: true
      - name: api-db-sample-cnt
        image: mehdizj2000/api-db-sample
        ports:
        - containerPort: 8080
        env:
        - name: GNAF_DB_USER
          valueFrom: 
            secretKeyRef: 
              name: postgres-db-data
              key: username
        - name: GNAF_DB_PASS
          valueFrom: 
            secretKeyRef: 
              name: postgres-db-data
              key: password
        - name: GNAF_DB_NAME
          valueFrom: 
            secretKeyRef: 
              name: postgres-db-data
              key: database
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8080
          initialDelaySeconds: 30
          timeoutSeconds: 2
          periodSeconds: 3
          failureThreshold: 1
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8080
          initialDelaySeconds: 60
          timeoutSeconds: 2
          periodSeconds: 8
          failureThreshold: 1
    
